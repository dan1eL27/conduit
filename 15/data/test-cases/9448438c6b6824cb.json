{"uid":"9448438c6b6824cb","name":"Sign in with valid and invalid data","fullName":"vizsgaremek.test.test_conduit.TestSignInAndSignOut#test_sign_in_with_csv","historyId":"6aaaa2ab7bd6da5158247a1f43702aad","time":{"start":1682095569593,"stop":1682095579292,"duration":9699},"status":"failed","statusMessage":"AssertionError: assert 'Invalid user credentials.' == 'Password field required.'\n  - Password field required.\n  + Invalid user credentials.","statusTrace":"self = <test_conduit.TestSignInAndSignOut object at 0x7ff278f5c3d0>\n\n    @allure.id(\"TC-03\")\n    @allure.title(\"Sign in with valid and invalid data\")\n    def test_sign_in_with_csv(self):\n        wait = WebDriverWait(self.browser, 2)\n        for user in get_users_from_file():\n            if user[0].startswith('signin'):\n                use_case, username, email, password, expected_title, expected_description = user\n                signin(self.browser, email, password)\n                try:\n>                   logout_button = wait.until(EC.element_to_be_clickable((By.XPATH, \"//a[@active-class='active']\")))\n\nvizsgaremek/test/test_conduit.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6c7a32f7ffccf2b9e2dd2fecc027c9c9\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7ff277c6dbd0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x563cc19e2fe3 <unknown>\nE       #1 0x563cc1721d36 <unknown>\nE       #2 0x563cc175ec4d <unknown>\nE       #3 0x563cc175ed61 <unknown>\nE       #4 0x563cc179a6a4 <unknown>\nE       #5 0x563cc177f8ed <unknown>\nE       #6 0x563cc1798232 <unknown>\nE       #7 0x563cc177f693 <unknown>\nE       #8 0x563cc175203a <unknown>\nE       #9 0x563cc175317e <unknown>\nE       #10 0x563cc19a4dbd <unknown>\nE       #11 0x563cc19a8c6c <unknown>\nE       #12 0x563cc19b24b0 <unknown>\nE       #13 0x563cc19a9d63 <unknown>\nE       #14 0x563cc197cc35 <unknown>\nE       #15 0x563cc19cd138 <unknown>\nE       #16 0x563cc19cd2c7 <unknown>\nE       #17 0x563cc19db093 <unknown>\nE       #18 0x7f0576080b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_conduit.TestSignInAndSignOut object at 0x7ff278f5c3d0>\n\n    @allure.id(\"TC-03\")\n    @allure.title(\"Sign in with valid and invalid data\")\n    def test_sign_in_with_csv(self):\n        wait = WebDriverWait(self.browser, 2)\n        for user in get_users_from_file():\n            if user[0].startswith('signin'):\n                use_case, username, email, password, expected_title, expected_description = user\n                signin(self.browser, email, password)\n                try:\n                    logout_button = wait.until(EC.element_to_be_clickable((By.XPATH, \"//a[@active-class='active']\")))\n                    logout_button.click()\n                except:\n                    assert get_error_title(self.browser) == expected_title\n>                   assert get_error_description(self.browser) == expected_description\nE                   AssertionError: assert 'Invalid user credentials.' == 'Password field required.'\nE                     - Password field required.\nE                     + Invalid user credentials.\n\nvizsgaremek/test/test_conduit.py:78: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestSignInAndSignOut","time":{"start":1682095568439,"stop":1682095569593,"duration":1154},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"_xunit_setup_method_fixture_TestSignInAndSignOut::0","time":{"start":1682095579337,"stop":1682095579393,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"as_id","value":"TC-03"},{"name":"parentSuite","value":"vizsgaremek.test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestSignInAndSignOut"},{"name":"host","value":"fv-az338-730"},{"name":"thread","value":"3086-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"vizsgaremek.test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"9448438c6b6824cb.json","parameterValues":[]}